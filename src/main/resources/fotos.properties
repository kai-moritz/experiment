# Die Variablen in dieser Datei werden w\u00E4hrend des Build-Vorgangs mit den
# entsprechenden Default-Werten aus der Master-POM gef\u00FCllt.
#
# Die Ressource-Filter sind so eingestellt, dass die Variablen in den
# Spring-Konfigurationsdateien nicht ersetzt werden. Stadtdessen ist in
# der Konfigurationsdatei spring/core.xml ein
#
#   PropertyPlaceholderConfigurer
#
# konfiguriert, der diese Variablen als Java-Sytem-Properties bereitstellt.
#
# Dadurch werden zur Buildzeit hier die Default-Werte festgeschrieben, die
# dann aber bei Bedarf zur Laufzeit durch das Setzen angepasster
# Java-Sytem-Properties \u00FCberschrieben werden k\u00F6nnen!
#
# Ausnahme:
# Die Variablen in der Servlet-Konfiguration in
# src/main/webapp/WEB-INF/web.xml m\u00FCssen zur Buildzeit ersetzt werden, da
# die Servlet-Spezifikation eine dynamische Ersetzung durch Java-System-
# Properties zur Deployzeit nicht vorsieht!.
#
# Beispiel:
# mvn jetty:run-war -Dfotos.datadir=/tmp
#

jdbc.driverClassName=${jdbc.driverClassName}
jdbc.url=${jdbc.url}
jdbc.username=${jdbc.username}
jdbc.password=${jdbc.password}

hibernate.dialect=${hibernate.dialect}

fotos.datadir=${fotos.datadir}
fotos.filesystem.store=${fotos.datadir}/store
fotos.filesystem.stage=${fotos.datadir}/stage
